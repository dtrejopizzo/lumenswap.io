variables:
  imageTag: lumenswap-front:$CI_COMMIT_SHORT_SHA

stages:
  - build
  - package
  - deploy-demo
  - deploy-prod

build:
  resource_group: $CI_PROJECT_NAME
  only:
    - master
    - develop
    - next-dev
  stage: build
  script:
    - docker build -t $imageTag .
  tags:
    - runner

release package:
  resource_group: $CI_PROJECT_NAME
  only:
    - master
    - develop
    - next-dev
  stage: package
  needs:
    - build
  script:
    - helm package --app-version $CI_COMMIT_SHORT_SHA  $MANIFEST_PATH/lumenswap-front -d $PACKAGE_PATH/lumenswap-front
    - mv $PACKAGE_PATH/lumenswap-front/lumenswap-front-latest.tgz $PACKAGE_PATH/lumenswap-front/lumenswap-front-$CI_COMMIT_SHORT_SHA.tgz

    - helm package --app-version $CI_COMMIT_SHORT_SHA  $MANIFEST_PATH/lumenswap-demo -d $PACKAGE_PATH/lumenswap-demo
    - mv $PACKAGE_PATH/lumenswap-demo/lumenswap-demo-latest.tgz $PACKAGE_PATH/lumenswap-demo/lumenswap-demo-$CI_COMMIT_SHORT_SHA.tgz
  tags:
    - runner

deploy to demo:
  resource_group: $CI_PROJECT_NAME
  only:
    - master
    - develop
    - next-dev
  stage: deploy-demo
  needs:
    - release package
  script:
    - export KUBECONFIG=$CONFIG_PATH/kube_config
    - helm upgrade lumenswap-demo $PACKAGE_PATH/lumenswap-demo/lumenswap-demo-$CI_COMMIT_SHORT_SHA.tgz --namespace lumenswap-demo --wait --atomic --install
  tags:
    - runner

deploy to prod:
  resource_group: $CI_PROJECT_NAME
  only:
    - master
  stage: deploy-prod
  needs:
    - release package
    - build
    - deploy to demo
  when: manual
  script:
    - export KUBECONFIG=$CONFIG_PATH/kube_config
    - helm upgrade lumenswap-front $PACKAGE_PATH/lumenswap-front/lumenswap-front-$CI_COMMIT_SHORT_SHA.tgz --namespace lumenswap-prod --wait --atomic --install
  tags:
    - runner
